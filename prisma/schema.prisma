generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Medicine {
    id             String           @id @default(cuid())
    userId         String
    name           String
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
    user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
    MedicineDetail MedicineDetail[]

    @@index([userId])
}

model MedicineDetail {
    id              String        @id @default(cuid())
    medicineId      String
    medicalRecordId String
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
    medicine        Medicine      @relation(fields: [medicineId], references: [id], onDelete: Cascade)
    medicalRecord   MedicalRecord @relation(fields: [medicalRecordId], references: [id], onDelete: Cascade)

    @@index([medicineId])
    @@index([medicalRecordId])
}

model Patient {
    id            String          @id @default(cuid())
    userId        String
    name          String
    phone         String?
    address       String?
    gender        Gender
    birthDate     DateTime
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
    user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
    MedicalRecord MedicalRecord[]

    @@index([userId])
}

model MedicalRecord {
    id             String           @id @default(cuid())
    patientId      String
    complaint      String           @db.VarChar(700)
    diagnosis      String           @db.VarChar(700)
    note           String           @db.VarChar(700)
    checkup        String?          @db.VarChar(400)
    pay            Int
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
    labNote        String?          @db.VarChar(700)
    treatment      String?          @db.VarChar(400)
    patient        Patient          @relation(fields: [patientId], references: [id], onDelete: Cascade)
    Attachment     Attachment[]
    MedicineDetail MedicineDetail[]

    @@index([patientId])
}

model Attachment {
    id              String        @id @default(cuid())
    medicalRecordId String
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
    fileId          String?
    medicalRecord   MedicalRecord @relation(fields: [medicalRecordId], references: [id], onDelete: Cascade)
    File            File?         @relation(fields: [fileId], references: [id])

    @@index([medicalRecordId])
    @@index([fileId])
}

model File {
    id          String       @id @default(cuid())
    type        String
    url         String
    mime        String
    name        String
    extension   String
    size        Int
    height      Int?
    width       Int?
    createdAt   DateTime     @default(now())
    attachments Attachment[]
}

model User {
    id            String     @id @default(cuid())
    name          String?
    email         String?    @unique
    password      String?
    emailVerified DateTime?
    image         String?
    isSubscribed  Boolean    @default(false)
    customerId    String?
    phone         String?
    Patient       Patient[]
    Medicine      Medicine[]
}

model Payment {
    id        String   @id
    orderId   String
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime
}

enum Gender {
    male
    female
}
